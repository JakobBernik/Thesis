<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200804 19:41:42.900" generator="Robot 3.2.1 (Python 2.7.15 on win32)">
<suite source="C:\Users\Asus\Desktop\TestingSystem\robot\04_SystemTests.robot" id="s1" name="04 SystemTests">
<test id="s1-t1" name="Non-subscribed point test">
<kw name="Run system test">
<arguments>
<arg>nonsubscribedPointAdditionTest</arg>
</arguments>
<kw name="Run Java test">
<arguments>
<arg>thesis.testing.system.SystemTests</arg>
<arg>${testName}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:42.966" starttime="20200804 19:41:42.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Executing Java CLI test ${testName}.</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:42.966" starttime="20200804 19:41:42.966"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${java_cli}</arg>
<arg>thesis.testing.runner.NgRunner</arg>
<arg>${group}</arg>
<arg>${testName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200804 19:41:42.966" level="INFO">Starting process:
C:/Users/Asus/Desktop/TestingSystem/scripts/java-cli.sh thesis.testing.runner.NgRunner thesis.testing.system.SystemTests nonsubscribedPointAdditionTest</msg>
<msg timestamp="20200804 19:41:42.966" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200804 19:41:49.346" level="INFO">Process completed.</msg>
<msg timestamp="20200804 19:41:49.349" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200804 19:41:49.349" starttime="20200804 19:41:42.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status.stdout}</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:49.349" starttime="20200804 19:41:49.349"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status.stderr}</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:49.349" starttime="20200804 19:41:49.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status.stdout}</arg>
</arguments>
<msg timestamp="20200804 19:41:49.349" level="INFO"></msg>
<status status="PASS" endtime="20200804 19:41:49.349" starttime="20200804 19:41:49.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status.stderr}</arg>
</arguments>
<msg timestamp="20200804 19:41:49.349" level="INFO"></msg>
<status status="PASS" endtime="20200804 19:41:49.349" starttime="20200804 19:41:49.349"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${exit_code_path}/exitCode.txt</arg>
</arguments>
<assign>
<var>${exitCode}</var>
</assign>
<msg timestamp="20200804 19:41:49.349" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt"&gt;C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt&lt;/a&gt;'.</msg>
<msg timestamp="20200804 19:41:49.356" level="INFO">${exitCode} = 0
</msg>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:49.349"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${exit_code_path}/exitCode.txt</arg>
</arguments>
<msg timestamp="20200804 19:41:49.356" html="yes" level="INFO">Removed file '&lt;a href="file://C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt"&gt;C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:49.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${exitCode}</arg>
<arg>0</arg>
<arg>Test failed, examine log in report</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:49.356"></status>
</kw>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:42.966"></status>
</kw>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:42.966"></status>
</kw>
<doc>test if new point, added to oldb that does not match capture configuration is not archived</doc>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200804 19:41:49.356" critical="yes" starttime="20200804 19:41:42.956"></status>
</test>
<test id="s1-t2" name="Subscribed point test">
<kw name="Run system test">
<arguments>
<arg>subscribedPointAdditionTest</arg>
</arguments>
<kw name="Run Java test">
<arguments>
<arg>thesis.testing.system.SystemTests</arg>
<arg>${testName}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>.</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:49.356"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Executing Java CLI test ${testName}.</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:49.356" starttime="20200804 19:41:49.356"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>${java_cli}</arg>
<arg>thesis.testing.runner.NgRunner</arg>
<arg>${group}</arg>
<arg>${testName}</arg>
<arg>shell=yes</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200804 19:41:49.356" level="INFO">Starting process:
C:/Users/Asus/Desktop/TestingSystem/scripts/java-cli.sh thesis.testing.runner.NgRunner thesis.testing.system.SystemTests subscribedPointAdditionTest</msg>
<msg timestamp="20200804 19:41:49.366" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200804 19:41:55.477" level="INFO">Process completed.</msg>
<msg timestamp="20200804 19:41:55.477" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200804 19:41:55.477" starttime="20200804 19:41:49.356"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status.stdout}</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:55.477" starttime="20200804 19:41:55.477"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${status.stderr}</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:55.477" starttime="20200804 19:41:55.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status.stdout}</arg>
</arguments>
<msg timestamp="20200804 19:41:55.477" level="INFO"></msg>
<status status="PASS" endtime="20200804 19:41:55.482" starttime="20200804 19:41:55.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status.stderr}</arg>
</arguments>
<msg timestamp="20200804 19:41:55.482" level="INFO"></msg>
<status status="PASS" endtime="20200804 19:41:55.482" starttime="20200804 19:41:55.482"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${exit_code_path}/exitCode.txt</arg>
</arguments>
<assign>
<var>${exitCode}</var>
</assign>
<msg timestamp="20200804 19:41:55.482" html="yes" level="INFO">Getting file '&lt;a href="file://C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt"&gt;C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt&lt;/a&gt;'.</msg>
<msg timestamp="20200804 19:41:55.482" level="INFO">${exitCode} = 0
</msg>
<status status="PASS" endtime="20200804 19:41:55.482" starttime="20200804 19:41:55.482"></status>
</kw>
<kw name="Remove File" library="OperatingSystem">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${exit_code_path}/exitCode.txt</arg>
</arguments>
<msg timestamp="20200804 19:41:55.486" html="yes" level="INFO">Removed file '&lt;a href="file://C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt"&gt;C:\Users\Asus\Desktop\TestingSystem\robot\exitCode.txt&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200804 19:41:55.486" starttime="20200804 19:41:55.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${exitCode}</arg>
<arg>0</arg>
<arg>Test failed, examine log in report</arg>
</arguments>
<status status="PASS" endtime="20200804 19:41:55.486" starttime="20200804 19:41:55.486"></status>
</kw>
<status status="PASS" endtime="20200804 19:41:55.486" starttime="20200804 19:41:49.356"></status>
</kw>
<status status="PASS" endtime="20200804 19:41:55.486" starttime="20200804 19:41:49.356"></status>
</kw>
<doc>test if new point, added to oldb that matches capture configuration is archived</doc>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200804 19:41:55.486" critical="yes" starttime="20200804 19:41:49.356"></status>
</test>
<status status="PASS" endtime="20200804 19:41:55.486" starttime="20200804 19:41:42.906"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="04 SystemTests" pass="2">04 SystemTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
